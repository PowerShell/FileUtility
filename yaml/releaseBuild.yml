name: $(Date:yyyyMMdd)$(Rev:.rr)

variables:
  # Don't download unneeded packages
  - name: DOTNET_SKIP_FIRST_TIME_EXPERIENCE
    value: 'true'
  # Improve performance by not sending telemetry
  - name: DOTNET_CLI_TELEMETRY_OPTOUT
    value: 'true'

trigger:
  batch: true
  branches:
    include:
      - master
  paths:
    exclude:
      - /.dependabot/*
      - /.poshchan/*
      - /.github/**/*
      - /.vscode/**/*
      - /.vsts-ci/misc-analysis.yml
      - /tools/**/*
      - .editorconfig
      - .gitattributes
      - .gitignore
      - /docs/**/*
      - /CHANGELOG.md
      - /CONTRIBUTING.md
      - /README.md
      - /LICENSE.txt
      - /CODE_OF_CONDUCT.md

resources:
  repositories:
  - repository: ComplianceRepo
    type: github
    endpoint: ComplianceGHRepo
    name: PowerShell/compliance

stages:
- stage: Build
  displayName: Build
  jobs:
  - job: 'ReleaseBuild'
    displayName: Release Build
    pool:
      name: PowerShell1ES
      demands:
      - ImageOverride -equals PSMMS2019-Secure
    steps:
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        includePreviewVersions: true
        version: 6.x
    - pwsh: |
        # build agents get reused so we make sure to remove the old archive
        Remove-Item -Path $(Build.SourcesDirectory)/SignedZip -Recurse -Force -ErrorAction Ignore
        Remove-Item -Path $(Build.SourcesDirectory)/Microsoft.PowerShell.FileUtility -Recurse -Force -ErrorAction Ignore
        .\build.ps1 -Clean
        Remove-Item .\out\*.pdb
        $packageVersion = (Import-PowerShellDataFile $(Build.SourcesDirectory)/out/Microsoft.PowerShell.FileUtility/Microsoft.PowerShell.FileUtility.psd1).ModuleVersion
        $vstsCommandString = "vso[task.setvariable variable=PackageVersion]$packageVersion"
        Write-Host ("sending " + $vstsCommandString)
        Write-Host "##$vstsCommandString"
      displayName: Build
    - publish: "out/"
      artifact: out
  - job: 'SignBuild'
    variables:
    - group: ESRP
    displayName: Signing Build
    dependsOn: 'ReleaseBuild'
    pool:
      name: PowerShell1ES
      demands:
      - ImageOverride -equals PSMMS2019-Secure
    steps:
    - powershell: |
        Get-ChildItem -Path env:
      displayName: Capture environment
      condition: succeededOrFailed()

    - task: DownloadPipelineArtifact@2
      displayName: 'Download Pipeline Artifacts'
      inputs:
        artifact: 'out'
        path: $(Build.SourcesDirectory)/out

    - template: EsrpSign.yml@ComplianceRepo
      parameters:
        # the folder which contains the binaries to sign
        buildOutputPath: $(Build.SourcesDirectory)/out
        # the location to put the signed output
        signOutputPath: $(Build.SourcesDirectory)/Microsoft.PowerShell.FileUtility
        # the certificate ID to use
        # use the preview lifetime limited cert
        certificateId: "CP-460906"
        # The file pattern to use
        # If not using minimatch: comma separated, with * supported
        # If using minimatch: newline separated, with !, **, and * supported.
        # See link in the useMinimatch comments.
        pattern: 'Microsoft.PowerShell.*.dll,Microsoft.PowerShell.*.psd1,Microsoft.PowerShell.*.psm1,Microsoft.PowerShell.*.ps1xml'
        # decides if the task should use minimatch for the pattern matching.
        # https://github.com/isaacs/minimatch#features
        useMinimatch: false

    - ${{ if ne(variables.SkipSigning, 'True') }}:
      - template: Sbom.yml@ComplianceRepo
        parameters:
          BuildDropPath: $(Build.SourcesDirectory)/out/Microsoft.PowerShell.FileUtility
          Build_Repository_Uri: 'https://github.com/powershell/fileutility'
          PackageName: Microsoft.PowerShell.FileUtility
          PackageVersion: $(PackageVersion)

    - pwsh: |
        New-Item -Path $(Build.SourcesDirectory)/SignedZip -ItemType Directory -ErrorAction Ignore
        Compress-Archive -Path $(Build.SourcesDirectory)/out/Microsoft.PowerShell.FileUtility -DestinationPath $(Build.SourcesDirectory)/SignedZip/Microsoft.PowerShell.FileUtility.zip -Force
      displayName: 'Compress archive'
      condition: succeededOrFailed()

    - task: PublishPipelineArtifact@1
      inputs:
        targetpath: $(Build.SourcesDirectory)/out/Microsoft.PowerShell.FileUtility
        artifactName: Signed

    - task: PublishPipelineArtifact@1
      inputs:
        targetpath: $(Build.SourcesDirectory)/SignedZip
        artifactName: SignedZip

- stage: compliance
  displayName: Compliance
  dependsOn: Build
  jobs:
  - job: Compliance_Job
    pool:
      name: PowerShell1ES
      demands:
      - ImageOverride -equals PSMMS2019-Secure
    steps:
    - checkout: self
    - checkout: ComplianceRepo
    - download: current
      artifact: Signed

    - pwsh: |
        Get-ChildItem -Path "$(Pipeline.Workspace)\Signed" -Recurse
      displayName: Capture downloaded artifacts

    - template: assembly-module-compliance.yml@ComplianceRepo
      parameters:
        # binskim
        AnalyzeTarget: '$(Pipeline.Workspace)\*.dll'
        AnalyzeSymPath: 'SRV*'
        # component-governance
        sourceScanPath: '$(Build.SourcesDirectory)'
        # credscan
        suppressionsFile: ''
        # TermCheck
        optionsRulesDBPath: ''
        optionsFTPath: ''
        # tsa-upload
        codeBaseName: 'FileUtility_20210930'
        # selections
        APIScan: false # set to false when not using Windows APIs.
